{"runtime":"javascript","schema_version":1,"generated_at":"2025-08-27T21:18:42.517Z","snippets":[{"id":"base64-decoder","title":"Base64 Payload Decoder","description":"Decodes Base64 encoded payload data into readable sensor values using Buffer utilities","language":"javascript","tags":["base64","decoder","protocol","utility","basic"],"filename":"base64-decoder.js","file_path":"javascript/base64-decoder.js"},{"id":"bitwise-operations-parser","title":"Bitwise Operations Parser","description":"Parse binary data using bitwise operations for compact sensor protocols","language":"javascript","tags":["bitwise","binary","compact","sensor","basic"],"filename":"bitwise-operations-parser.js","file_path":"javascript/bitwise-operations-parser.js"},{"id":"data-validation","title":"Data Validation and Error Handling","description":"Validates sensor data ranges and handles invalid values","language":"javascript","tags":["validation","error-handling","sensor","utility","basic"],"filename":"data-validation.js","file_path":"javascript/data-validation.js"},{"id":"json-to-tago-format","title":"JSON to TagoIO Format Converter","description":"Converts raw JSON data to TagoIO format with support for nested objects and metadata","language":"javascript","tags":["json","converter","format","utility","basic"],"filename":"json-to-tago-format.js","file_path":"javascript/json-to-tago-format.js"},{"id":"lorawan-hexadecimal-parser","title":"LoRaWAN Hexadecimal Payload Parser","description":"Generic payload parser for LoRaWAN devices compatible with any network server","language":"javascript","tags":["lorawan","hexadecimal","buffer","protocol","basic"],"filename":"lorawan-hexadecimal-parser.js","file_path":"javascript/lorawan-hexadecimal-parser.js"},{"id":"mqtt-comma-separated-parser","title":"MQTT Comma-Separated Values Parser","description":"Enhanced parser for MQTT devices sending comma-separated data","language":"javascript","tags":["mqtt","csv","comma-separated","parser","basic"],"filename":"mqtt-comma-separated-parser.js","file_path":"javascript/mqtt-comma-separated-parser.js"},{"id":"mqtt-hexadecimal-parser","title":"MQTT Hexadecimal Payload Parser","description":"Generic payload parser for MQTT devices sending hexadecimal data","language":"javascript","tags":["mqtt","hexadecimal","buffer","protocol","basic"],"filename":"mqtt-hexadecimal-parser.js","file_path":"javascript/mqtt-hexadecimal-parser.js"},{"id":"multi-sensor-aggregator","title":"Multi-Sensor Data Aggregator","description":"Aggregates data from multiple sensors and calculates simple derived metrics","language":"javascript","tags":["aggregation","multi-sensor","calculations","basic"],"filename":"multi-sensor-aggregator.js","file_path":"javascript/multi-sensor-aggregator.js"},{"id":"senml-parser","title":"SenML (Sensor Markup Language) Parser","description":"Parses SenML formatted data according to RFC 8428 specification using dayjs","language":"javascript","tags":["senml","sensor","protocol","parser","dayjs","advanced"],"filename":"senml-parser.js","file_path":"javascript/senml-parser.js"},{"id":"sigfox-hexadecimal-parser","title":"Sigfox Hexadecimal Payload Parser","description":"Generic payload parser for Sigfox devices with GPS coordinates and sensor data","language":"javascript","tags":["sigfox","hexadecimal","buffer","gps","coordinates","advanced"],"filename":"sigfox-hexadecimal-parser.js","file_path":"javascript/sigfox-hexadecimal-parser.js"},{"id":"string-payload-parser","title":"String Payload Parser","description":"Parse string-based payload with delimiters and key-value pairs","language":"javascript","tags":["string","parser","delimiter","key-value","basic"],"filename":"string-payload-parser.js","file_path":"javascript/string-payload-parser.js"},{"id":"temperature-fahrenheit-to-celsius","title":"Temperature Fahrenheit to Celsius Converter","description":"Converts temperature values from Fahrenheit to Celsius with validation","language":"javascript","tags":["temperature","conversion","fahrenheit","celsius","basic"],"filename":"temperature-fahrenheit-to-celsius.js","file_path":"javascript/temperature-fahrenheit-to-celsius.js"},{"id":"time-based-filter","title":"Time-Based Data Filter","description":"Filter data based on time of day using dayjs","language":"javascript","tags":["filter","time","dayjs","utility","basic"],"filename":"time-based-filter.js","file_path":"javascript/time-based-filter.js"},{"id":"timezone-data-processor","title":"Timezone Data Processor","description":"Convert timestamps between timezones using dayjs and timeUtils","language":"javascript","tags":["timezone","dayjs","timestamp","conversion","basic"],"filename":"timezone-data-processor.js","file_path":"javascript/timezone-data-processor.js"}]}